{"name":"JiraRobot","tagline":"Robot library based on jira-python","body":"JiraRobot library for Robot Framework\r\n==================================================\r\n\r\n\r\nIntroduction\r\n------------\r\n\r\nJiraRobot is a Robot Framework Library to interact with JIRA through JIRA's REST API. JiraRobot uses a python library called [jira-python](https://pypi.python.org/pypi/jira/0.25).\r\n\r\n- Information about JiraRobot keywords can be found on the [JiraRobot Keyword Documentation](http://navinet.github.io/JiraRobot/JiraRobot-KeywordDocumentation.html) page.\r\n- The API documentaton for jira-python can be found [here](https://jira-python.readthedocs.org/en/latest/index.html)\r\n- So far this library has been tested and fuctions with JIRA versions 5 and 6\r\n\r\nRequirements\r\n------------\r\n* Python 2.7.4 (Newer versions not tested)\r\n* Robot Framework 2.8.4 (Newer versions not tested)\r\n* jira 0.25 (python library) (Newer versions not tested)\r\n\r\nInstallation\r\n------------\r\n#### Using pip ####\r\n\r\nThe recommended installation tool is [pip](http://pip-installer.org).\r\n\r\nInstall pip.\r\nEnter the following:\r\n\r\n    pip install JiraRobot\r\n\r\nAppend ``--upgrade`` to update both the library and all \r\nits dependencies to the latest version:\r\n\r\n    pip install --upgrade JiraRobot\r\n\r\nTo install a specific version enter:\r\n\r\n    pip install JiraRobot==(DesiredVersion)\r\n\r\n#### Manual Installation ####\r\n\r\nTo install JiraRobot manually, install all dependency libraries before installing JiraRobot.\r\n\r\n1) Install [Robot Framework installed](http://code.google.com/p/robotframework/wiki/Installation).\r\n\r\n2) Download source distributions (``*.tar.gz`` / ``*.zip``) for the library and its\r\n   dependencies.\r\n\r\n  Jira-Python dependencies:\r\n\r\n   - [https://pypi.python.org/pypi/requests](https://pypi.python.org/pypi/requests/2.2.1)\r\n   - [https://pypi.python.org/pypi/oauthlib](https://pypi.python.org/pypi/oauthlib/0.6.3)\r\n   - [https://pypi.python.org/pypi/ipython](https://pypi.python.org/pypi/ipython/2.1.0)\r\n   - [https://pypi.python.org/pypi/tlslite](https://pypi.python.org/pypi/tlslite/0.4.6)\r\n\r\n  JiraRobot and dependencies:\r\n\r\n   - [https://pypi.python.org/pypi/jirarobot](https://pypi.python.org/pypi/jirarobot)\r\n   - [https://pypi.python.org/pypi/jira](https://pypi.python.org/pypi/jira/0.25)\r\n\r\n3) Extract each source distribution to a temporary location using 7zip (or your preferred zip program).\r\n\r\n4) Open command line and go to each directory that was created from extraction and install each project using:\r\n\r\n       python setup.py install\r\n\r\n#### Uninstall ####\r\n\r\nTo uninstall JiraRobot use the following pip command: \r\n\r\n    pip uninstall JiraRobot\r\n\r\nHowever, if the package was installed manually it will need to be uninstalled manually:\r\n\r\n1) Navigate to ``C:\\Python27`` and delete JiraRobotTests\r\n\r\n2) Navigate to ``C:\\Python27\\Lib\\site-packages`` and delete JiraRobot-1.0-py2.7.egg-info and the folder ``JiraRobot``\r\n\r\nDirectory Layout\r\n----------------\r\n\r\n*JiraRobot/JiraRobot.py* :\r\n    The Robot Python Library that makes use of Jira-Python.\r\n\r\n*Tests/Acceptance/JiraRobotTest.txt* :\r\n    Example test file to display what various keywords from JiraRobot Library accomplish\r\n\r\n*doc/JiraRobot-KeywordDocumentation.html* :\r\n    Keyword documentation for the JiraRobot library.\r\n\r\n\r\nUsage\r\n-----\r\n\r\nTo write tests with Robot Framework and JiraRobot, \r\nJiraRobot must be imported into your Robot test suite.\r\nSee [Robot Framework User Guide](http://code.google.com/p/robotframework/wiki/UserGuide) for more information.\r\n\r\nRunning the Demo\r\n----------------\r\n\r\nThe test file *JiraRobotTest.txt*, is an easily executable test for Robot Framework using JiraRobot Library. \r\nFor in depth detail on how the keywords function, read the Keyword documentation found here: [Keyword Documentation](http://navinet.github.io/JiraRobot/JiraRobot-KeywordDocumentation.html)\r\n\r\nBefore running the tests, certain variables must be changed to make a successful test run; \r\n\r\n- jirausername - The user you wish to authenticate with \r\n- jirapassword - If a username is given this can be set as that users password. Optional, but if username is given it will prompt for password at test execution but won't save the password\r\n- jiraserver - The url of the JIRA server to connect to\r\n- usertoassign - The second user to assign to the second issue created (should be different from the orignal user but can be the same if you desire)\r\n\r\nIn the create issue keywords the variables below may need changed to match yoru JIRA server\r\n\r\n- project\r\n- issue type\r\n- priority \r\n\r\nTo run the test after installing, navigate to ``C:\\Python\\JiraRobotTests`` directory. Open a command prompt withing this folder and run:\r\n\r\n    pybot JiraRobotTest.txt\r\n\r\nThings To Note When Creating Issues\r\n-----------------------------------\r\nThe [Create Issues Example](https://developer.atlassian.com/display/JIRADEV/JIRA+REST+API+Example+-+Create+Issue) page is full of useful information in what is required for creating issues, including customfields and issue field value types which are  explained in simple terms below.\r\n\r\nWhen using the *Create Issue* keyword a dictionary must be passed in, in the form of a string (see the [Keyword Documentation](http://navinet.github.io/JiraRobot/JiraRobot-KeywordDocumentation.html) for more information). \r\n\r\nIn this dictionary/string issue field names must be stated along with their respective values. Some field types my only accept certain types of values or patterns e.g. Date Fields must be input in the format 'YYYY-MM-DD' and MultiSelect fields will only accept an array of dictionaries (\"customfield_10008\": [ {\"value\": \"red\" }, {\"value\": \"blue\" }, {\"value\": \"green\" }]). It is very important to get the value type right or an error will be thrown so check [here](https://developer.atlassian.com/display/JIRADEV/JIRA+REST+API+Example+-+Create+Issue#JIRARESTAPIExample-CreateIssue-Examplesofhowtosetcustomfielddataforotherfieldtypes:) for more information on field and their value types.\r\n\r\nSome issues may have custom fields the names of these fields is the ID of the field itself generally in the form 'customfield_(NUM)'. The ID of the field can be found by inspecting the element in an internet browser and getting the element ID. More information can be found [here](https://developer.atlassian.com/display/JIRADEV/JIRA+REST+API+Example+-+Create+Issue#JIRARESTAPIExample-CreateIssue-Exampleofcreatinganissueusingcustomfields).\r\n\r\nIt may be of use to follow the example issue creation in the *JiraRobotTest.txt* file.\r\n\r\nGetting Help\r\n------------\r\nThe [user group for Robot Framework](http://groups.google.com/group/robotframework-users) is the best place to get help. Include in the post:\r\n\r\n- Full description of what you are trying to do and expected outcome\r\n- Version number of JiraRobot, Robot Framework, and Jira-Python\r\n- Traceback or other debug output containing error information","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}